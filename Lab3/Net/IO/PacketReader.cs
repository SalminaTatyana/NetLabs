using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace Lab3.Net.IO
{
    class PacketReader : BinaryReader
    {
        private NetworkStream _ns;
        string path = DateTime.Now.ToString("dd.MM.yyyy_hh-mm-ss") + ".txt";
        Dictionary<int, char> DeISO = new Dictionary<int, char>()
        {
            {33,'!' },
            {34,'"' },
            {35,'#' },
            {36,'$' },
            {37,'%' },
            {38,'&' },
            {39, '\'' },
            {40,'(' },
            {41,')' },
            {42, '*'  },
            {43,'+' },
            {44,',' },
            {45,'-' },
            {46,'.' },
            {47,'/' },
            {48,'0' },
            {49,'1' },
            {50,'2' },
            {51,'3' },
            {52,'4' },
            {53,'5' },
            {54,'6' },
            {55,'7' },
            {56,'8' },
            {57,'9' },
            {58,':' },
            {59,';' },
            {60,'<' },
            {61,'=' },
            {62,'>' },
            {63,'?' },
            {64,'@' },
            {65,'A' },
            {66,'B' },
            {67,'C' },
            {68,'D' },
            {69,'E' },
            {70,'F' },
            {71,'G' },
            {72,'H' },
            {73,'I' },
            {74,'J' },
            {75,'K' },
            {76,'L' },
            {77,'M' },
            {78,'N' },
            {79,'O' },
            {80,'P' },
            {81,'Q' },
            {82,'R' },
            {83,'S' },
            {84,'T' },
            {85,'U' },
            {86,'V' },
            {87,'W' },
            {88,'X' },
            {89,'Y' },
            {90,'Z' },
            {91,'[' },
            {92,'\\'},
            {93,']' },
            {94,'^' },
            {95,'_' },
            {96,'`' },
            {97,'a' },
            {98,'b' },
            {99,'c' },
            {100,'d' },
            {101,'e' },
            {102,'f' },
            {103,'g' },
            {104,'h' },
            {105,'i' },
            {106,'j' },
            {107,'k' },
            {108,'l' },
            {109,'m' },
            {110,'n' },
            {111,'o' },
            {112,'p' },
            {113,'q' },
            {114,'r' },
            {115,'s' },
            {116,'t' },
            {117,'u' },
            {118,'v' },
            {119,'w' },
            {120,'x' },
            {121,'y' },
            {122,'z' },
            {123,'{' },
            {124,'|' },
            {125,'}' },
            {126,'~' },
            {160,' ' },
            {161,'Ё' },
            {162,'Ђ' },
            {163,'Ѓ' },
            {164,'Є' },
            {165,'Ѕ' },
            {166,'І' },
            {167,'Ї' },
            {168,'Ј' },
            {169,'Љ' },
            {170,'Њ' },
            {171,'Ћ' },
            {172,'¬' },
            {174,'Ў' },
            {175,'Џ' },
            {176,'А' },
            {177,'Б' },
            {178,'В' },
            {179,'Г' },
            {180,'Д' },
            {181,'Е' },
            {182,'Ж' },
            {183,'З' },
            {184,'И' },
            {185,'Й' },
            {186,'К' },
            {187,'Л' },
            {188,'М' },
            {189,'Н' },
            {190,'О' },
            {191,'П' },
            {192,'Р' },
            {193,'С' },
            {194,'Т' },
            {195,'У' },
            {196,'Ф' },
            {197,'Х' },
            {198,'Ц' },
            {199,'Ч' },
            {200,'Ш' },
            {201,'Щ' },
            {202,'Ъ' },
            {203,'Ы' },
            {204,'Ь' },
            {205,'Э' },
            {206,'Ю' },
            {207,'Я' },
            {208,'а' },
            {209,'б' },
            {210,'в' },
            {211,'г' },
            {212,'д' },
            {213,'е' },
            {214,'ж' },
            {215,'з' },
            {216,'и' },
            {217,'й' },
            {218,'к' },
            {219,'л' },
            {220,'м' },
            {221,'н' },
            {222,'о' },
            {223,'п' },
            {224,'р' },
            {225,'с' },
            {226,'т' },
            {227,'у' },
            {228,'ф' },
            {229,'х' },
            {230,'ц' },
            {231,'ч' },
            {232,'ш' },
            {233,'щ' },
            {234,'ъ' },
            {235,'ы' },
            {236,'ь' },
            {237,'э' },
            {238,'ю' },
            {239,'я' },
            {240,'№' },
            {241,'ё' },
            {242,'ђ' },
            {243,'ѓ' },
            {244,'є' },
            {247,'ї' },
            {249,'љ' },
            {250,'њ' },
            {251,'ћ' },
            {252,'ќ' },
            {253,'§' },
            {254,'ў' },
            {255,'џ' }
        };
        public PacketReader(NetworkStream ns) : base(ns)
        {
            _ns = ns;
        }
        public string ReadMessage()
        {
            byte[] msgBuffer;
            var length = ReadInt32();
            msgBuffer = new byte[length];
            _ns.Read(msgBuffer, 0, length);
            var msg = Decode(msgBuffer);
            return msg;
        }

        private string Decode(byte[] result)
        {
            string str = "";

            // выводим сообщение
            foreach (var item in result)
            {
                str = str + DeISO[item];
            }
            using (BinaryWriter writer = new BinaryWriter(File.Open(path, FileMode.Append)))
            {
                foreach (var item in result)
                {
                    writer.Write(item);

                }
                writer.Write('\n');
            }
            return str;
        }
    }
}

